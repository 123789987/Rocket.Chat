image: "circleci/node:8.11-stretch"

before_script:
  - date

after_script:
  - date

stages:
  - prepare
  - code-check
  - build

Install Meteor:
  stage: prepare
  script: |
    # Restore bin from cache
    set +e
    METEOR_SYMLINK_TARGET=$(readlink ~/.meteor/meteor)
    METEOR_TOOL_DIRECTORY=$(dirname "$METEOR_SYMLINK_TARGET")
    set -e
    LAUNCHER=$HOME/.meteor/$METEOR_TOOL_DIRECTORY/scripts/admin/launch-meteor
    if [ -e $LAUNCHER ]
    then
      echo "Cached Meteor bin found, restoring it"
      sudo cp "$LAUNCHER" "/usr/local/bin/meteor"
    else
      echo "No cached Meteor bin found."
    fi

    # only install meteor if bin isn't found
    command -v meteor >/dev/null 2>&1 || curl https://install.meteor.com | sed s/--progress-bar/-sL/g | /bin/sh

Versions:
  stage: prepare
  script: |
    npm --versions
    node -v
    meteor --version
    meteor npm --versions
    meteor node -v
    git version

Meteor npm install:
  stage: prepare
  script: |
    # rm -rf node_modules
    # rm -f package-lock.json
    meteor npm install
    cd packages/rocketchat-livechat/.app
    meteor npm install
    cd -

Lint:
  stage: code-check
  script: |
    meteor npm run lint

Unit Test:
  stage: code-check
  script: |
    MONGO_URL=mongodb://localhost:27017 meteor npm run testunit

Build Rocket.Chat:
  stage: build
  variables:
    TOOL_NODE_FLAGS: --max_old_space_size=3072
  script: |
    if [[ $CIRCLE_TAG ]] || [[ $CIRCLE_BRANCH == 'develop' ]]; then
      meteor reset;
    fi

    export CIRCLE_PR_NUMBER="${CIRCLE_PR_NUMBER:-${CIRCLE_PULL_REQUEST##*/}}"
    if [[ -z $CIRCLE_PR_NUMBER ]]; then
      meteor build --server-only --directory /tmp/build-test
    else
      export METEOR_PROFILE=1000
      meteor build --server-only --directory --debug /tmp/build-test
    fi;

Prepare build:
  stage: build
  script: |
    mkdir /tmp/build/
    cd /tmp/build-test
    tar czf /tmp/build/Rocket.Chat.tar.gz bundle
    cd /tmp/build-test/bundle/programs/server
    npm install
